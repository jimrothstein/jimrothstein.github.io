[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "jim",
    "section": "",
    "text": "resume blog5 gist experiments"
  },
  {
    "objectID": "index.html#welcome-to-github-pages",
    "href": "index.html#welcome-to-github-pages",
    "title": "jim",
    "section": "Welcome to GitHub Pages",
    "text": "Welcome to GitHub Pages\nYou can use the editor on GitHub to maintain and preview the content for your website in Markdown files.\nWhenever you commit to this repository, GitHub Pages will run Jekyll to rebuild the pages in your site, from the content in your Markdown files. hi\n\nMarkdown\nMarkdown is a lightweight and easy-to-use syntax for styling your writing. It includes conventions for\nSyntax highlighted code block\n\n# Header 1\n## Header 2\n### Header 3\n\n- Bulleted\n- List\n\n1. Numbered\n2. List\n\n**Bold** and _Italic_ and `Code` text\n\n[Link](url) and ![Image](src)\nFor more details see GitHub Flavored Markdown.\n\n\nJekyll Themes\nYour Pages site will use the layout and styles from the Jekyll theme you have selected in your repository settings. The name of this theme is saved in the Jekyll _config.yml configuration file.\n\n\nSupport or Contact\nHaving trouble with Pages? Check out our documentation or contact support and we’ll help you sort it out."
  },
  {
    "objectID": "010_mtcars_basic.html",
    "href": "010_mtcars_basic.html",
    "title": "mtcars_basic",
    "section": "",
    "text": "A frequent problem occurs when trying to access columns inside a data.frame.\n\nhead(mtcars)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\nmtcars[1:5, c(\"hp\")]\n\n[1] 110 110  93 110 175\n\n\nBut using just col name fails.\n\nmtcars[1:5, hp]\n\nError in eval(expr, envir, enclos): object 'hp' not found\n\n\nThe reason as explained in many places, such as dplyr ….., is mtcars exisits in the environment, but not hp.\n\nhp\n\nError in eval(expr, envir, enclos): object 'hp' not found\n\n\nAgain this is explained in many places, along with several ways to fix, for example.\n\nwith(mtcars, hp)\n\n [1] 110 110  93 110 175 105 245  62  95 123 123 180 180 180 205 215 230  66  52\n[20]  65  97 150 150 245 175  66  91 113 264 175 335 109\n\n\nOf course, R’s help also explains this but you must be comfortable with terms like environment , expression and parent and what constructing an environment with data means.\n\n?with\n\nHere is my own take. It is same as above, but I find this way clearer.\nLet’s check what is current globalenv() the the environment. Then packages attached to search path.\n\nls()\n\n[1] \"has_annotations\"\n\nsearch()\n\n[1] \".GlobalEnv\"        \"package:stats\"     \"package:graphics\" \n[4] \"package:grDevices\" \"package:utils\"     \"package:datasets\" \n[7] \"package:methods\"   \"Autoloads\"         \"package:base\"     \n\n\nFor our purposes, note there is no hp\n\nls(base)\n\nWarning in ls(base): 'base' converted to character string\n\n\nError in as.environment(pos): no item called \"base\" on the search list\n\nls(\"package:base\") |&gt; grep(pattern=c(\"mtcars\"))\n\ninteger(0)\n\n\nAttach mtcars to search path\n\nattach(mtcars)\nsearch()\n\n [1] \".GlobalEnv\"        \"mtcars\"            \"package:stats\"    \n [4] \"package:graphics\"  \"package:grDevices\" \"package:utils\"    \n [7] \"package:datasets\"  \"package:methods\"   \"Autoloads\"        \n[10] \"package:base\"     \n\n\nNow, can find hp\n\nhp\n\n [1] 110 110  93 110 175 105 245  62  95 123 123 180 180 180 205 215 230  66  52\n[20]  65  97 150 150 245 175  66  91 113 264 175 335 109\n\n\nWhy? col names are in environment one level up from globalenv()\n\nls(parent.env(globalenv()))\n\n [1] \"am\"   \"carb\" \"cyl\"  \"disp\" \"drat\" \"gear\" \"hp\"   \"mpg\"  \"qsec\" \"vs\"  \n[11] \"wt\"  \n\n\nThis will add mtcars into globalenv(), but not change search()\n\n# This puts data in globalenv()\ndata(mtcars)\nls()\n\n[1] \"has_annotations\" \"mtcars\"         \n\nsearch()\n\n [1] \".GlobalEnv\"        \"mtcars\"            \"package:stats\"    \n [4] \"package:graphics\"  \"package:grDevices\" \"package:utils\"    \n [7] \"package:datasets\"  \"package:methods\"   \"Autoloads\"        \n[10] \"package:base\"     \n\n\nRemove mtcars\n\nrm(mtcars)\nls()\n\n[1] \"has_annotations\"\n\nmtcars[1:5, ]\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n\nls()\n\n[1] \"has_annotations\""
  },
  {
    "objectID": "001_tech_reading.html",
    "href": "001_tech_reading.html",
    "title": "Tech Reading",
    "section": "",
    "text": "As of \nAlgorithms & ML\n\nAkalin https://compgenomr.github.io/book/ - very good\nBerkeley, excellent glossary:\nBerkeley CRASH ML https://mlberkeley.substack.com/p/part-1\n\nBishop (2006) Ch1 nice intro: https://www.microsoft.com/en-us/research/uploads/prod/2006/01/Bishop-Pattern-Recognition-and-Machine-Learning-2006.pdf\n\nBreiman, 2 cultures: https://www.jstor.org/stable/2676681\n\nChollet, Deep Learning for R (not online, no pdf) python: https://docs.google.com/viewer?a=v&pid=sites&srcid=dW10LmVkdS5wa3xzbmxwfGd4Ojc1ODc1ODY2OTZiOTUzOGQ\n\nCompeau:\n\ngreat ideas book! http://compeau.cbd.cmu.edu/\n\n\nhttp://compeau.cbd.cmu.edu/programming-for-lovers/ cmu - ch 8, 9 esp collinear.\n\n\n\nBoehmke Hands on ML | https://bradleyboehmke.github.io/HOML/ Ch 4,5\nBohm Statistics for Physics https://www-library.desy.de/preparch/books/vstatmp_engl.pdf change of variables (SEE 3.4.1, density as volume)\nChan, Stanley https://probability4datascience.com/index.html more math and uses Likelikhood\nDavidson http://qed.econ.queensu.ca/ETM/etm-info.html\nDeisenroth, Faiesel et al | Math4ML some intution; linear trans, distributions https://mml-book.github.io/book/mml-book.pdf linear alg book, regression (Ch 9), nice intro to (\\(\\Omega,\\mathcal{A}, P\\))\nrelated videos https://www.youtube.com/playlist?list=PLkxomGYFWp67infnvPmEcqyQqk0q6ntrY\n\n\nGagolewski Lightweight ML with R iPad, PDF\nGoodfellow et al: https://www.deeplearningbook.org/ ideas\nHiggens “Practical R Info?”\nKaplan 2023 https://mdsr-book.github.io/mdsr3e/ (tidyverse, parsnip, links to wikip for all stats)\nKaplan 2017, 2E https://dtkaplan.github.io/SM2-bookdown/\n\nKaplan 2021, 2E, Data https://dtkaplan.github.io/DataComputingEbook/ see\nKaplan 2020, Calculus with R https://dtkaplan.github.io/RforCalculus/index.html mosaic and mosaicCalc packages (fitting to curves) ML, chapter 18, plus interesting other chapters\nLindholm, “Machine Learning: A first course for engineers” PDF more math http://smlbook.org/\n\nMatloff (Prob book) https://github.com/matloff/probstatbook/blob/master/ProbStatBookW21.pdf\nSEE 15.2 for logistic; var transform\nmcelreath: https://github.com/rmcelreath/stat_rethinking_2022 (videos)\nMolnar https://christophm.github.io/interpretable-ml-book/ Ch 5.2 logistical regression (explanations!)\nRandom Services https://www.randomservices.org/random/dist/Transformations.html\n\nSiegrist: https://stats.libretexts.org/Bookshelves/Probability_Theory/Probability_Mathematical_Statistics_and_Stochastic_Processes_(Siegrist)/\n\nThomas, Math for ML … good lin alg, but quickly gets advanced. https://gwthomas.github.io/docs/math4ml.pdf\n\nUCLA: Mixed Models - intro: https://stats.oarc.ucla.edu/other/mult-pkg/introduction-to-linear-mixed-models/\n\nVasishth: https://vasishth.github.io/bayescogsci/book/ch-reg.html#sec-logistic\n\nVenables http://web.mit.edu/r_v3.4.1/R-intro.pdf (SEE models chapter)\nWiki: https://en.wikipedia.org/wiki/Generalized_linear_model#Binary_data, not easy but through\nSciLearn\nScott, DS with R, Gentle Intro\nKazdan | normal equations, linear alghttps://www2.math.upenn.edu/~kazdan/312S14/\n\nKazdan, many good references: https://www2.math.upenn.edu/~kazdan/\n\n\nML R Packages\n\nKeras\ncaret\ntorch\nSTAN\nIntro to Linear Alg & Models,\n\nKuiper, Shonda: simple, clear: video: https://www.youtube.com/watch?v=jQkK0XMrAdM\n\nRace, Shaina gentle intro to lin alg:, https://shainarace.github.io/LinearAlgebra/index.html\n\nThomas, Garrett, Math for ML, Berkeley https://gwthomas.github.io/docs/math4ml.pdf\nBendixcarstensen.com, with R & matrix models (practical; try not use api pkg) http://www.bendixcarstensen.com/APC/linalg-notes-BxC.pdf\nRafael genomics - Chapter 4 matrix (his older stuff is better, but not best organization)\nRafael, Book2: http://rafalab.dfci.harvard.edu/dsbook-part-2/ (2020?), esp Linear Models and ML chapters\nGallier, advanced linear alg https://www.seas.upenn.edu/~cis5150/linalg-I.pdf\n\nLogistic Regression (binary response)\n\\[  \n\\Pr(y) \\sim \\binom{n}{y}\\theta^y(1-\\theta)^{n-y}\n\\] \\[\n\\Pr(y=1)=\\theta=\\text{logit}^{-1}(\\beta_0+\\beta_1x_1+\\beta_2x_2+...+\\beta_7x_7)\n\\]\n\nPrerequisite: Ease going from quantile function to CDF, and back.\nDifference: binomial variable, y, =1 and Pr(Y=1)\nDifference: p(y=m | x) conditional class probability vs p(y | x), where m repsents a ‘class’, given x\nModel y vs model log-odds (y)\nReason for modeling mean\nTransformations of RV\n\nSEE :\n\nhttps://en.wikipedia.org/wiki/Quantile_function\nVasishth,\nInterpretable ML, Chapter 5.2\nhttps://stats.stackexchange.com/questions/374452/family-of-glm-represents-the-distribution-of-the-response-variable-or-residuals/374461#374461\nhttps://www.theanalysisfactor.com/link-functions-and-errors-in-logistic-regression/\nhttps://www.randomservices.org/random/dist/Transformations.html\nQUARTO & CSS | SCSS\n\n\nREAD discussions: https://github.com/quarto-dev/quarto-cli\n\n\n\n\nhttps://github.com/mine-cetinkaya-rundel/test-website\nRstudio community | SCSS: https://community.rstudio.com/t/quarto-markdown-list-and-blank-line/160693/4\n\nexit\n\nknitr::knit_exit()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "jim",
    "section": "",
    "text": "resume blog5 gist experiments\nThis is jim’s “about.qmd”"
  },
  {
    "objectID": "410_bquote_example.html",
    "href": "410_bquote_example.html",
    "title": "410_bquote",
    "section": "",
    "text": "bquote(hello)                             ##  hello\n\nhello\n\nbquote(\"hello\")                           ##  \"hello\"\n\n[1] \"hello\"\n\n## even when x is undefined\nrm(x)\n\nWarning in rm(x): object 'x' not found\n\nbquote(x)                   ## x\n\nx\n\nx = 1\ny = 2\nz = 3\n(xyz &lt;- bquote(x + y + z))                ##    (x + y + z)\n\nx + y + z"
  },
  {
    "objectID": "410_bquote_example.html#like-quote-bquote-can-quote-its-argument",
    "href": "410_bquote_example.html#like-quote-bquote-can-quote-its-argument",
    "title": "410_bquote",
    "section": "",
    "text": "bquote(hello)                             ##  hello\n\nhello\n\nbquote(\"hello\")                           ##  \"hello\"\n\n[1] \"hello\"\n\n## even when x is undefined\nrm(x)\n\nWarning in rm(x): object 'x' not found\n\nbquote(x)                   ## x\n\nx\n\nx = 1\ny = 2\nz = 3\n(xyz &lt;- bquote(x + y + z))                ##    (x + y + z)\n\nx + y + z"
  },
  {
    "objectID": "410_bquote_example.html#like-quote-bquote-can-return-character-call-expression",
    "href": "410_bquote_example.html#like-quote-bquote-can-return-character-call-expression",
    "title": "410_bquote",
    "section": "Like quote, bquote can return character, call, expression",
    "text": "Like quote, bquote can return character, call, expression\n\nxyz\n\nx + y + z\n\nis.expression(xyz)\n\n[1] FALSE\n\nis.character(xyz)\n\n[1] FALSE\n\ntypeof(xyz)\n\n[1] \"language\"\n\nis.call(xyz)            ## TRUE\n\n[1] TRUE\n\neval(xyz)               ## 6\n\n[1] 6\n\n(res = (bquote(hello)))\n\nhello\n\nis.call(res)\n\n[1] FALSE\n\nis.character(res)\n\n[1] FALSE\n\nis.expression(res)\n\n[1] FALSE\n\nis.symbol(res)          ## TRUE\n\n[1] TRUE\n\neval(res)               ## Error, b/c no object \n\nError in eval(res): object 'hello' not found\n\n(res = (bquote(\"hello\")))\n\n[1] \"hello\"\n\nis.call(res)\n\n[1] FALSE\n\nis.character(res)       ## TRUE\n\n[1] TRUE\n\nis.expression(res)\n\n[1] FALSE\n\nis.symbol(res)          ## \n\n[1] FALSE\n\neval(res)               ## \"hello\"\n\n[1] \"hello\"\n\n(res = bquote(~x+y))    ## ~x+y\n\n~x + y\n\nis.call(res)            ## TRUE \n\n[1] TRUE\n\npurrr::is_formula(res)\n\n[1] TRUE"
  },
  {
    "objectID": "410_bquote_example.html#bquote-also-allows-parts-to-be-quote-and-parts-to-be-evaluated-and-substituted-immediately",
    "href": "410_bquote_example.html#bquote-also-allows-parts-to-be-quote-and-parts-to-be-evaluated-and-substituted-immediately",
    "title": "410_bquote",
    "section": "bquote also allows parts to be quote and parts to be evaluated and substituted immediately",
    "text": "bquote also allows parts to be quote and parts to be evaluated and substituted immediately\n\nx = 1\n\nquote(1 + .(x))   # 1 + .(x) \n\n1 + .(x)\n\n(res=bquote(1 + .(x)))  # 1 + 1\n\n1 + 1\n\nis.call(res)\n\n[1] TRUE\n\nis.expression(res)\n\n[1] FALSE\n\n(res=bquote(template + .(x)))\n\ntemplate + 1\n\nis.call(res)\n\n[1] TRUE\n\nis.expression(res)\n\n[1] FALSE\n\n(res=bquote(sin(.(x)))) # sin(1)\n\nsin(1)\n\n(res=bquote(sin(.(x+1)))) # sin(1)\n\nsin(2)\n\nis.call(res)\n\n[1] TRUE\n\nis.expression(res)\n\n[1] FALSE\n\n(res=bquote(sin(.(x+1)), splice=TRUE)) # sin(1)\n\nsin(2)"
  },
  {
    "objectID": "410_bquote_example.html#splice-in-r-4.0.0-multiple-expresssions",
    "href": "410_bquote_example.html#splice-in-r-4.0.0-multiple-expresssions",
    "title": "410_bquote",
    "section": "SPLICE in R 4.0.0 (multiple expresssions)",
    "text": "SPLICE in R 4.0.0 (multiple expresssions)\nhttps://stackoverflow.com/a/60689381/5057251 https://stackoverflow.com/q/72039909/5057251 (multiple ways)"
  },
  {
    "objectID": "410_bquote_example.html#compare-quote-and-bquote",
    "href": "410_bquote_example.html#compare-quote-and-bquote",
    "title": "410_bquote",
    "section": "compare quote and bquote",
    "text": "compare quote and bquote\n\n# bquote - step by step ,   .() operator\nbquote(1+2)       # 1 + 2\n\n1 + 2\n\ntwo = 2\nbquote(1 + two)   # 1 + two\n\n1 + two\n\nbquote(hello)\n\nhello\n\nbquote(1 + .(two))   # 1 + 2   (substitution, not eval)\n\n1 + 2\n\neval(bquote(1 + two)) # 3 \n\n[1] 3\n\neval(bquote(1 + .(two)))   # 3 \n\n[1] 3\n\n\n###—————————–"
  },
  {
    "objectID": "410_bquote_example.html#stole-from-httpsgithub.comklmrbox",
    "href": "410_bquote_example.html#stole-from-httpsgithub.comklmrbox",
    "title": "410_bquote",
    "section": "(stole from https://github.com/klmr/box)",
    "text": "(stole from https://github.com/klmr/box)\nsubject=“bquote” mod_name=“base” bquote(help(topic = .(subject), package = .(mod_name))) eval( bquote(help(topic = .(subject), package = .(mod_name))))\nsubject=“quote” eval( bquote(help(topic = .(subject), package = .(mod_name)))) ##\nd = 2 bquote(a+b+c + .(d)) ## a + b + c + 2"
  },
  {
    "objectID": "410_bquote_example.html#section",
    "href": "410_bquote_example.html#section",
    "title": "410_bquote",
    "section": "",
    "text": "theta = pi/4 bquote(sin(1 + .(theta))) ## sin(1 + 0.7853…) eval(bquote(sin(1 + .(theta)))) ## 0.977"
  },
  {
    "objectID": "410_bquote_example.html#section-1",
    "href": "410_bquote_example.html#section-1",
    "title": "410_bquote",
    "section": "",
    "text": "z= bquote(sin(1 + .(theta))) ## sin(1 + 0.7853…) typeof(z) ## “language” is.call(z) ## T eval(z) ## 0.977\n\n::: {.cell}\n\n```{.r .cell-code}\nx = 5 \nbquote(x == .(x))\n\nx == 5\n\nbquote(.(x))\n\n[1] 5\n\n## from ethz documentation, takes expr, returns lang ob\ndefault &lt;- 1\n(z = bquote( function(x, y = .(default)) x+y ))\n\nfunction(x, y = 1) x + y\n\ntypeof(z)\n\n[1] \"language\"\n\nis.call(z)  #T\n\n[1] TRUE\n\nis.expression(z) #F \n\n[1] FALSE\n\nis.symbol(z) #F\n\n[1] FALSE\n\na = 2\nplot(1:10, a*(1:10), main = bquote(a == .(a)))\n\n\n\n(angle  = 1:10)\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n(variable = as.name(\"angle\"))             ## variable is now a symbol\n\nangle\n\nis.character(variable)  # FALSE\n\n[1] FALSE\n\nis.name(variable)   # TRUE\n\n[1] TRUE\n\nis.symbol(variable) # TRUE\n\n[1] TRUE\n\ntypeof(variable)    # TRUE\n\n[1] \"symbol\"\n\n##\nexpr = quote(x+y)\nis.expression(expr) # FALSE\n\n[1] FALSE\n\nis.call(expr)      # TRUE\n\n[1] TRUE\n\nstr(expr)\n\n language x + y\n\n#-----------------------------\n##  quasiquotation:  insert .... into an expr template; return expression\npdf()\n\n\nplot(x = 1:10, y=91:100)\n\nbquote(x= .(variable))\n\nError in bquote(x = .(variable)): unused argument (x = .(variable))\n\nbquote(\n  plot(x = .(variable), \n       y = sin(.(variable)))\n  )\n\nplot(x = angle, y = sin(angle))\n\ndev.off()\n\npng \n  2 \n\n:::\n\n## A variable to pass in\ncor &lt;- -.321\ncor2 &lt;- '-.321'\n\npar(mfrow = c(1, 2))\nplot(1:10, 1:10, main = bquote(\"Hello\" ~ r[xy] == .(cor) ~ \"and\" ~ B^2))\nplot(1:10, 1:10, main = bquote(\"Hello\" ~ r[xy] == .(cor2) ~ \"and\" ~ B^2))\n\n\n\n\n\nbquote(\"Hello\")\n\n[1] \"Hello\"\n\nbquote(\"Hello\" ~ 3)\n\n\"Hello\" ~ 3\n\nbquote(\"Hello\" ~ r[xy])\n\n\"Hello\" ~ r[xy]\n\nx = 2\nbquote(\"hello\" ~ .(x))\n\n\"hello\" ~ 2\n\nbquote(\"x\" ~ .(x))\n\n\"x\" ~ 2\n\nbquote(\"The answer \"  ~.(x))\n\n\"The answer \" ~ 2\n\nbquote(x == .(x))\n\nx == 2\n\nif (F) bquote(x = .(x))\n\n# want 1 + 2\ny = 1\nx=2\nbquote( function(x, y = .(y)) x+y )\n\nfunction(x, y = 1) x + y\n\neval(bquote( function(x, y = .(y)) x+y ))\n\nfunction(x, y = .(y)) x+y\n\neval(eval(bquote( function(x, y = .(y)) x+y )))\n\nfunction(x, y = .(y)) x+y"
  },
  {
    "objectID": "130_poisson_distribution.html",
    "href": "130_poisson_distribution.html",
    "title": "jim",
    "section": "",
    "text": "Note\n\n\n\nNote that there are five types of callouts, including: note, warning, important, tip, and caution."
  },
  {
    "objectID": "130_poisson_distribution.html#poisson-distribution",
    "href": "130_poisson_distribution.html#poisson-distribution",
    "title": "jim",
    "section": "Poisson Distribution",
    "text": "Poisson Distribution\n\nSEE Taylor, binomial to Poisson\nBMLS\nPSU 414\nwikipedia\nhttp://www.econometricsbysimulation.com/search?q=poisson\n\nLet \\chi be rv, counting of events , 0, 1, 2 … per interval. \\chi might be\n\ncounts per unit time, distance.\ntypos per page.\ncars passing per unit time.\nATM customers per hour."
  },
  {
    "objectID": "130_poisson_distribution.html#motivating-poisson",
    "href": "130_poisson_distribution.html#motivating-poisson",
    "title": "jim",
    "section": "Motivating Poisson:",
    "text": "Motivating Poisson:\nSuppose, on average, receive 9 letters in mail each day. And suppose can model post office as poisson. This addresses question: how many letters will I received today? Then expect sd to be sqrt(9) and so expect actual number of letters to vary between 3 and 12 (2 sd).\n\\begin{align*}\nPr(X = x) = {e^{-\\lambda}\\lambda^x}/{x!}\n\\end{align*}\n\nlambda = 9    # rate of 1 per unit\nx  &lt;- 0:20    # how many counts?\nz  &lt;- dpois(x = x, lambda = lambda)\nw  &lt;- dpois(x = x, lambda = 1)\nplot(z, main =\"Poisson Distribution: upto n=20 counts, compare lambda= c(1,9)\",\n     ylab = \"dpois\",\n     xlab = \"counts, 1:n\",\n     pch = 19,\n     col = \"plum\" \n)\npoints(w, pch = 20, col=\"red\")   # colors()\n\n\n\n# plot(w, main =\"Poisson Distribution: upto n=20 counts, lambda=1\",\n#      ylab = \"dpois\",\n#      xlab = \"counts, 1:n\",\n#      pch = 19,\n#      col = 3,\n#      col.axis = \"5\""
  },
  {
    "objectID": "020_CSS_play.html",
    "href": "020_CSS_play.html",
    "title": "Untitled",
    "section": "",
    "text": "This is a CSS play page. SEE css_examples.css for info\n\nIs this centered? yep\n\n\nA container? one item\n\n\nGiant (h1)\n\nbullet point (li)"
  },
  {
    "objectID": "040_not_zero.html",
    "href": "040_not_zero.html",
    "title": "not-zero",
    "section": "",
    "text": "I knew that 0 becomes FALSE, when logical is required.\n\nCodeif(0) print(\"FALSE\")\n\n\nAnd I knew that 1 becomes TRUE\n\nCodeif(1) print(\"TRUE\")\n\n[1] \"TRUE\"\n\n\nBut I did not know:\n\nCodeif(!0) print(\"TRUE\")\n\n[1] \"TRUE\""
  },
  {
    "objectID": "030_quarto_katex_html_references.html",
    "href": "030_quarto_katex_html_references.html",
    "title": "030_quarto_katex_html_references.qmd",
    "section": "",
    "text": "(this is fenced)\n\n\n\n\n\n\nNote\n\n\n\nThis is a play file. Note that there are five types of callouts, including: note, warning, important, tip, and caution.\n\n\n\nKatex References (html)\n\nKatex\ndisplay link only as url: https://katex.org/docs/supported.html\n\nHTML with quarto (CSS, ) https://quarto.org/docs/output-formats/html-basics.html\n\nEquations, Tex macros https://quarto.org/docs/authoring/markdown-basics.html#equations\n\nhttps://quarto.org/docs/guide/\nhttps://quarto.org/docs/publishing/github-pages.html\n\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nTest Latex\nThis is inline latex \\theta; using katex to render in html!"
  }
]